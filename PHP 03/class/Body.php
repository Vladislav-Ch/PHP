<?php
/**
 * Created by PhpStorm.
 * User: Vlad
 * Date: 04.12.2018
 * Time: 8:19
 */

interface IShape {
    public function v();
    public function s();
}

abstract class Body implements IShape
{
    protected $a;
    function __construct($a)
    {
        $this->a = $a;
    }

    function __destruct()
    {
        // TODO: Implement __destruct() method.
    }

    public function toString(){
        echo "<table class='table table-striped'><tr><th>Площадь</th><th>Объем</th></tr><tr><td>".$this->s()."</td><td>".$this->v()."</td></tr></table>";
    }
}

class Ball extends Body{

    function __construct($a)
    {
        parent::__construct($a);
    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }

    function s()
    {
        return 4 * pow($this->a, 2) * M_PI;
    }

    function v()
    {
        return 4/3 * M_PI * pow($this->a, 3);
    }
}


class Parallelepiped extends Body{

    public $b;
    public $c;

    function __construct($a, $b, $c)
    {
        parent::__construct($a);
        $this->b = $b;
        $this->c = $c;
    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }

    function s()
    {
        return 2 * ($this->a * $this->b + $this->b * $this->c + $this->a * $this->c);
    }

    function v()
    {
        return $this->a * $this->b * $this->c;
    }

}
